(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{493:function(e,t,a){"use strict";a.r(t);var n=a(2),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"day-2-getting-and-posting-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-2-getting-and-posting-apis"}},[e._v("#")]),e._v(" Day 2 - Getting and Posting Apis")]),e._v(" "),a("br"),e._v(" "),a("p",[e._v("(4-6-21)")]),e._v(" "),a("br"),e._v(" "),a("h2",{attrs:{id:"daily-journal-and-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daily-journal-and-questions"}},[e._v("#")]),e._v(" Daily Journal and Questions")]),e._v(" "),a("br"),e._v("\nAFTERNOON PROJECT: https://github.com/JaredVandeWater/spring21-gregslist-mvc\nAFTERNOON PROJECT 2: https://github.com/JaredVandeWater/summer21-gregslist-v1\n"),a("br"),e._v(" "),a("p",[e._v("Read Asynchronous Code > JavaScript Promises and answer the following questions\n"),a("br"),e._v(" "),a("br")]),e._v(" "),a("p",[e._v("What are the three states of a Promise?\n"),a("br"),e._v("\nPending- until we receive our data\nResolved- we received our data\nRejected- we failed to receive\n"),a("br"),e._v(" "),a("br")]),e._v(" "),a("p",[e._v('How do promises seek to resolve the issues of "callback hell"?\n'),a("br"),e._v("\nBy using something called chaining, we can avoid a bunch of nested operations and simply put one after another instead.\n"),a("br"),e._v(" "),a("br")]),e._v(" "),a("p",[e._v("What is the difference between .then() and .catch()?\n"),a("br"),e._v("\nthen() is called after a promise is resolved, it decides what to do with the resolved promise.\ncatch() is used when a promise fails and is rejected. So if the promise fails it will jump to the catch method.\n"),a("br"),e._v(" "),a("br")])])}),[],!1,null,null,null);t.default=s.exports}}]);